#general
sortVersionEndpoint=&sort=desc
perPageEndpoint=&per_page=100
gitlabProjectUrl=https://gitlab.foxtree.dev/api/v4/projects/115/packages
portArray=lsof,-i,-P,-n
tokenEndpoint=?private_token=%s
startAppium=appium -p %s
killAppium=pkill -9 -f appium
startServerStressTestSSS=java -jar ServerStressTest.jar 0 1 %s bot 'Qqq1111.' %s %s 100 
#first %s - serverName, second %s - chatId %s - countMessage
#getVersion = gitlabProjectUrl +  tokenEndpoint + sortVersionEndpoint
#url = gitlabUrl+ appEndpoint +tokenEndpoint
#android
packageSettingsName=io.appium.settings
getAndroidDevices=adb devices
getProp=adb -s %s shell getprop %s
getAndroidListPackages=adb -s %s shell pm list packages %s
gmsVersion=ro.com.google.gmsversion
uninstallAndroidApp=adb -s %s uninstall %s
clearLogcat=adb -s %s logcat -c
deleteOutput=adb -s %s shell rm -f /sdcard/output%s.txt
recordLogs=adb -s %s logcat -d -f /sdcard/output%s.txt
pullLogs=adb -s %s pull /sdcard/output%s.txt
outputAppLogFile=adb -s %s shell cat /sdcard/Android/data/%s/files/Log.txt
getWiFiStatus=adb -s %s shell settings get global wifi_on
turnOnMobileNetwork=adb -s %s shell svc data enable
turnOffMobileNetwork=adb -s %s shell svc data disable
createGSMCall=adb -s %s shell am start -a android.intent.action.CALL -d tel:%s
acceptGSMCall=adb -s %s shell input keyevent 5
cancelGSMCall=adb -s %s shell input keyevent 6
hms=hms
gms=gms
#androidAppEndpoint=/generic/android-%s/%s/app-%s-debug%s
androidAppEndpoint=/generic/android-%s/%s/app-%s-debugObfuscated%s
androidHMSAppEndpoint=/generic/android-%s/%s/app-%s-debug%s
androidOpenAdbCommandSS=adb -s %s shell am start -a %s
androidCloseAdbCommandSS=adb -s %s shell am force-stop %s
androidSettingsBundleId=android.settings
androidWifiSettingsBundleId=android.settings.WIFI_SETTINGS
androidMobileSettingsBundleId=android.settings.DATA_ROAMING_SETTINGS
androidPhotoBundleId=android.media.action.IMAGE_CAPTURE
androidVideoBundleId=android.media.action.VIDEO_CAPTURE
androidPhoneAppBundleId=android.intent.action.DIAL
#ios
packageWebDriverRunnerName=.WebDriverAgentRunner.xctrunner
#getIosDeviceId=xcrun xctrace list devices
getIosDeviceId=idevice_id -l
uninstallIosApp=ideviceinstaller -u %s -U %s
#ideviceinstaller -u 1850554916aba2591dc7c3a7dfdf51b5f24638ee -U by.depesha
#ios-deploy --id 1850554916aba2591dc7c3a7dfdf51b5f24638ee --uninstall_only --bundle_id by.depesha
getIosListPackages=ideviceinstaller,-l,-u
#ideviceinstaller -l | grep depesha
iosAppEndpoint=/generic/ios-iphone-new/%s/depesha-iOS-debug%s
#get app version iOS for CICD
#ios apps --udid=$DEVICE_ID  --list | grep by.depesha | sed -nE 's/.* ([0-9]+\.[0-9]+\.[0-9]+)$/\1/p'
#ideviceinstaller -u $DEVICE_ID -l | grep by.depesha | sed -r  's/^[^0-9]*([0-9]+).*/\1/'


